{"ast":null,"code":"var _jsxFileName = \"/Users/manas/Desktop/APP_CLIM/appclim/src/components/WeatherPanel.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-throw-literal */\n\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Form from './Formulario';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherPanel = () => {\n  _s();\n\n  let urlWeather = \"https://api.openweathermap.org/data/2.5/weather?appid=c93dc315927127214bf93e7cfb33ecfc&lang=es\";\n  let cityUrl = \"&q=\";\n  let urlForecast = \"https://api.openweathermap.org/data/2.5/forecast?appid=c93dc315927127214bf93e7cfb33ecfc&lang=es\";\n  const [weather, setWeather] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState([]);\n  const [show, setShow] = useState([]);\n  const [location, setLocation] = useState(\"\");\n\n  const getLocation = async loc => {\n    setLoading(true);\n    setLocation(loc); //weather\n\n    urlWeather = urlWeather + cityUrl + loc;\n    await fetch(urlWeather).then(response => {\n      if (!response.ok) throw {\n        response\n      };\n      return response.json();\n    }).then(weatherData => {\n      console.log(weatherData);\n      setWeather(weatherData);\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n      setShow(false);\n    }); // Forecast\n\n    urlForecast = urlForecast + cityUrl + loc;\n    await fetch(urlForecast).then(response => {\n      if (!response.ok) throw {\n        response\n      };\n      return response.json();\n    }).then(forecastData => {\n      console.log(forecastData);\n      setForecast(forecastData);\n      setLoading(false);\n      setShow(true);\n    }).catch(error => {\n      console.log(error);\n      setLoading(true);\n      setShow(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      newLocation: getLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      showData: show,\n      loadingData: loading,\n      weather: weather,\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 8\n  }, this);\n};\n\n_s(WeatherPanel, \"9E8zqgVUBFiTGvKEFAOIwQ7p1lA=\");\n\n_c = WeatherPanel;\nexport default WeatherPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPanel\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","Form","Card","WeatherPanel","urlWeather","cityUrl","urlForecast","weather","setWeather","forecast","setForecast","loading","setLoading","show","setShow","location","setLocation","getLocation","loc","fetch","then","response","ok","json","weatherData","console","log","catch","error","forecastData"],"sources":["/Users/manas/Desktop/APP_CLIM/appclim/src/components/WeatherPanel.js"],"sourcesContent":["/* eslint-disable no-throw-literal */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React, { useState, useEffect, Fragment}from 'react';\nimport Form from './Formulario';\nimport Card from './Card';\n\nconst WeatherPanel = () => {\n\n    let urlWeather = \"https://api.openweathermap.org/data/2.5/weather?appid=c93dc315927127214bf93e7cfb33ecfc&lang=es\";\n    let cityUrl = \"&q=\";\n\n    let urlForecast = \"https://api.openweathermap.org/data/2.5/forecast?appid=c93dc315927127214bf93e7cfb33ecfc&lang=es\";\n\n    const [weather, setWeather] = useState([]);\n    const [forecast, setForecast] = useState([]);\n    const [loading, setLoading] = useState([]);\n    const [show, setShow] = useState([]);\n    const [location, setLocation] = useState(\"\");\n    \n    const getLocation = async(loc) => {\n        setLoading(true);\n        setLocation(loc);\n\n        //weather\n        urlWeather = urlWeather + cityUrl + loc;\n\n        await fetch (urlWeather).then((response) =>{\n            if(!response.ok) throw {response}\n            return response.json();\n        }).then((weatherData) =>{\n            console.log(weatherData);\n            setWeather(weatherData);\n        }).catch(error =>{\n            console.log (error);\n            setLoading(false);\n            setShow(false);\n        });\n\n        // Forecast\n        urlForecast = urlForecast + cityUrl + loc; \n       \n        await fetch (urlForecast).then((response) => {\n            if(!response.ok) throw {response}\n            return response.json();\n        }).then((forecastData) =>{\n            console.log(forecastData);\n            setForecast(forecastData);\n            \n            setLoading(false);\n            setShow(true);\n\n\n        }).catch(error =>{\n            console.log(error);\n            setLoading(true);\n            setShow(false);\n        });\n    }\n\n    return(\n       <React.Fragment>\n           <Form\n           newLocation = {getLocation}\n            />\n\n            <Card\n            showData = {show}\n            loadingData = {loading}\n            weather = {weather}\n            forecast = {forecast}\n            />\n        \n       </React.Fragment>\n    )\n\n}\n\nexport default WeatherPanel;"],"mappings":";;;AAAA;;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,IAAIC,UAAU,GAAG,gGAAjB;EACA,IAAIC,OAAO,GAAG,KAAd;EAEA,IAAIC,WAAW,GAAG,iGAAlB;EAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMmB,WAAW,GAAG,MAAMC,GAAN,IAAc;IAC9BN,UAAU,CAAC,IAAD,CAAV;IACAI,WAAW,CAACE,GAAD,CAAX,CAF8B,CAI9B;;IACAd,UAAU,GAAGA,UAAU,GAAGC,OAAb,GAAuBa,GAApC;IAEA,MAAMC,KAAK,CAAEf,UAAF,CAAL,CAAmBgB,IAAnB,CAAyBC,QAAD,IAAa;MACvC,IAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB,MAAM;QAACD;MAAD,CAAN;MACjB,OAAOA,QAAQ,CAACE,IAAT,EAAP;IACH,CAHK,EAGHH,IAHG,CAGGI,WAAD,IAAgB;MACpBC,OAAO,CAACC,GAAR,CAAYF,WAAZ;MACAhB,UAAU,CAACgB,WAAD,CAAV;IACH,CANK,EAMHG,KANG,CAMGC,KAAK,IAAG;MACbH,OAAO,CAACC,GAAR,CAAaE,KAAb;MACAhB,UAAU,CAAC,KAAD,CAAV;MACAE,OAAO,CAAC,KAAD,CAAP;IACH,CAVK,CAAN,CAP8B,CAmB9B;;IACAR,WAAW,GAAGA,WAAW,GAAGD,OAAd,GAAwBa,GAAtC;IAEA,MAAMC,KAAK,CAAEb,WAAF,CAAL,CAAoBc,IAApB,CAA0BC,QAAD,IAAc;MACzC,IAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB,MAAM;QAACD;MAAD,CAAN;MACjB,OAAOA,QAAQ,CAACE,IAAT,EAAP;IACH,CAHK,EAGHH,IAHG,CAGGS,YAAD,IAAiB;MACrBJ,OAAO,CAACC,GAAR,CAAYG,YAAZ;MACAnB,WAAW,CAACmB,YAAD,CAAX;MAEAjB,UAAU,CAAC,KAAD,CAAV;MACAE,OAAO,CAAC,IAAD,CAAP;IAGH,CAXK,EAWHa,KAXG,CAWGC,KAAK,IAAG;MACbH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAhB,UAAU,CAAC,IAAD,CAAV;MACAE,OAAO,CAAC,KAAD,CAAP;IACH,CAfK,CAAN;EAgBH,CAtCD;;EAwCA,oBACG,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,IAAD;MACA,WAAW,EAAIG;IADf;MAAA;MAAA;MAAA;IAAA,QADJ,eAKK,QAAC,IAAD;MACA,QAAQ,EAAIJ,IADZ;MAEA,WAAW,EAAIF,OAFf;MAGA,OAAO,EAAIJ,OAHX;MAIA,QAAQ,EAAIE;IAJZ;MAAA;MAAA;MAAA;IAAA,QALL;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAgBH,CArED;;GAAMN,Y;;KAAAA,Y;AAuEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}